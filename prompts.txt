Create a detailed Product Requirement Document (PRD) in JSON format, with a well-defined *Success Metrics* section that includes the following:

        Metadata:
        - Document Version: {document_version}
        - Product Name: {product_name}
        - Document Owner: {document_owner}
        - Developer: {developer}
        - Stakeholder: {stakeholder}
        - Document Stage: {doc_stage}
        - Created Date: {created_date}

         Overview:
        - *Problem Statement*: Please expand and provide a comprehensive description of the core problem the project aims to solve. 
          Detail the impact of this problem, the challenges it presents, and the target audience or stakeholders affected. 
          Highlight any existing gaps or inefficiencies in the current solutions that this project will address.
        - *Objective*: Please provide a detailed explanation of the objectives of the project. This should outline the desired results and goals, 
          breaking down the main objectives into specific, actionable tasks. Describe how the project will improve existing processes or create value for its users.

        Project Dates: Start Date: {start_date}, End Date: {end_date}

        The PRD should include the following sections:

        1. *Problem Statement*: Develop a comprehensive and detailed problem statement, breaking it down into smaller issues or challenges that need to be addressed.
        
        2. *Objective*: Provide a clear and actionable objective statement with specific goals and deliverables, indicating how the project will meet the problem statement.

        3. *DARCI Table*:
           - *Decider*: The person who has the final authority on key decisions, such as whether a feature gets prioritized, approving additional costs or resources, or making decisions that might affect the public relations (PR) of the project.
           - *Accountable*: The person responsible for overseeing the entire project, ensuring tasks are completed on time and within scope, and reporting to decision-makers. This person is fully accountable for the success or failure of the project.
           - *Responsible*: The individuals or teams actively involved in executing specific tasks related to the project. They handle the technical aspects and implementation of the solution.
           - *Consulted*: The stakeholders or experts whose input is necessary for the success of the project. Their feedback and advice are valuable, but they are not responsible for completing tasks.
           - *Informed*: Those who need to be kept updated about the project’s progress, challenges, and results. They don’t actively contribute but are kept in the loop.

           Please generate *tags* and *guidelines* for each role that explain their responsibilities and involvement in the project.

        4. *Project Timeline*:
           - Generate a *Project Timeline* table with the following columns:
             -*Time Period*: Generate specific time periods from the start and end dates provided. Ensure the timeline spans the given period and break it down into clear, actionable segments.
             -*Activity*: List the major activities or tasks to be completed during each time period. Ensure the activities are relevant to the project's scope, such as research, development, testing, deployment, etc.
             -*PIC (Person in Charge)*: Assign specific team members or teams to each activity. If the exact individuals are not available, use placeholder names like 'Team Engineering' or 'Project Manager' for responsibilities.
                Be sure to break down the overall timeline into smaller, manageable tasks. The output should follow a structure like this:
                - Ensure the timeline includes multiple phases of the project, each with clearly defined activities and responsible persons.
                - Provide *Time Period* and *Activity* for each phase and ensure to assign a *PIC* for each task. The timeline should be broken down into milestones and key activities, such as design, development, integration, testing, and deployment.
                  The PRD should include the following *Project Timeline* section:

                - Time Period: [Start Date] - [End Date]
                - Activity: [Describe the activity that will take place during this period]
                - PIC: [Name of person/team responsible for the activity]

                Example:
                1. Time Period: 03 Sep 2024 - 20 Sep 2024
                Activity: Model Development (e.g., MTCNN/DeepFace)
                PIC: Team Engineering

                2. Time Period: 23 Sep 2024 - 07 Oct 2024
                Activity: Flask/FastAPI Development
                PIC: Team Engineering

                3. Time Period: 07 Oct 2024 - 18 Oct 2024
                Activity: Mobile Integration (e.g., Kotlin)
                PIC: Team Engineering

                4. Time Period: 21 Oct 2024 - 01 Nov 2024
                Activity: Testing and Optimization
                PIC: Team Engineering

                The timeline should be as detailed as possible, breaking down large tasks into smaller subtasks if necessary, and assign realistic timeframes and responsibilities.

        5. *Success Metrics*:
           - Define a *Success Metrics* table with the following columns:
             - *Metrics*: The specific measure of success, such as accuracy, performance, user satisfaction, etc.
             - *Definition*: A clear description of what the metric represents.
             - *Actual*: The current or estimated actual value of the metric (can be left as "N/A" initially).
             - *Target: The target value that needs to be achieved for this metric. The **Target* does not have to be a percentage; it can be a specific value, such as a time frame, number of users, or performance level.
           - Provide clear *Target* values based on the *Metrics* and *Definition*. Make sure the metrics align with the project's key objectives.

        6. *User Stories*:
           - *Title*: Provide a descriptive title for the user story (e.g., "Dataset Access" or "User Registration").
           - *User Story*: A brief description of the user need (e.g., "As a user, I want to access a comprehensive dataset of images for training purposes").
           - *Acceptance Criteria: Write the **Given, **When, **Then* format for the user story. This should specify the conditions under which the user story is considered complete (e.g., "Given I have access to the dataset, When I explore the dataset, Then I should find a diverse collection of images").
           - *Priority*: Assign a priority level (High, Medium, Low) based on the importance and urgency of the user story. This should help prioritize development tasks (e.g., "High", "Medium", "Low").

        Please ensure that each user story follows this format with clear and actionable acceptance criteria and a defined priority. Ensure consistency in the wording of *Acceptance Criteria* and make sure the *Priority* aligns with the business goals.

        Return the result as a detailed and structured JSON. The output should clearly show the *Title, **User Story, **Acceptance Criteria, and **Priority* for each user story. The *Priority* should be set based on the urgency and importance of the feature to the overall project objectives.
        Return the result as a detailed and structured JSON. Ensure that each section is comprehensive and clearly presented, particularly the *Success Metrics*, which should include appropriate definitions and targets that match the project’s goals.
    """
)